---
name: Integration Test

on:
  workflow_dispatch:

jobs:
  integration-test:
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: testpass123
          MYSQL_DATABASE: test
          MYSQL_USER: test
          MYSQL_PASSWORD: testpass123
      minio:
        image: minio/minio:edge-cicd
        ports:
          - 9000:9000
        env:
          MINIO_ACCESS_KEY: minio
          MINIO_SECRET_KEY: minio123    
    steps:
      - uses: actions/checkout@v5

      - name: Install MySQL client
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get update -qq
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y -qq mysql-client

      - name: Create MySQL config
        run: |
          mkdir -p ~/.mysql
          cat > ~/.mysql/my.cnf << EOF
          [client]
          host=127.0.0.1
          port=3306
          user=root
          password=testpass123
          EOF
          chmod 600 ~/.mysql/my.cnf

      - name: Wait for MariaDB
        run: |
          timeout 60 bash -c 'until mysqladmin --defaults-extra-file=~/.mysql/my.cnf ping --silent; do sleep 2; done'
          echo "MariaDB is ready"

      - name: Create databases
        run: |
          mysql --defaults-extra-file=~/.mysql/my.cnf test -e "CREATE DATABASE IF NOT EXISTS nudump;"
          mysql --defaults-extra-file=~/.mysql/my.cnf test -e "CREATE DATABASE IF NOT EXISTS nudiff;"

      - name: Import database migrations
        run: |
          mysql --defaults-extra-file=~/.mysql/my.cnf nudump < migrations/nudump.sql
          mysql --defaults-extra-file=~/.mysql/my.cnf nudiff < migrations/nudiff.sql

      - name: Install MinIO Client in container
        run: |
          # Detect architecture and download appropriate MinIO client
          ARCH=$(uname -m)
          if [ "$ARCH" = "x86_64" ]; then
            MC_URL="https://dl.min.io/client/mc/release/linux-amd64/mc"
          elif [ "$ARCH" = "aarch64" ] || [ "$ARCH" = "arm64" ]; then
            MC_URL="https://dl.min.io/client/mc/release/linux-arm64/mc"
          else
            echo "Unsupported architecture: $ARCH"
            exit 1
          fi
          curl $MC_URL \
            --create-dirs \
            -o $HOME/minio-binaries/mc && \
            chmod +x $HOME/minio-binaries/mc

      - name: Wait for MinIO
        run: |
          timeout 60 bash -c 'until curl -f http://127.0.0.1:9000/minio/health/live; do sleep 2; done'
          echo "MinIO is ready"

      - name: Creating bucket using MinIO Client
        run: |
          $HOME/minio-binaries/mc alias set myminio http://127.0.0.1:9000 minio minio123 && \
          $HOME/minio-binaries/mc mb myminio/dbdumps && \
          $HOME/minio-binaries/mc policy set public myminio/dbdumps

      - name: Build Docker image
        run: docker build --load -t s3dbdump .

      - name: Create temporary volume
        run: |
          docker volume create s3dbdump-temp
          docker run --rm -v s3dbdump-temp:/tmp alpine:latest chown -R 65534:65534 /tmp

      - name: Run s3dbdump
        run: |
          docker run \
            --rm \
            --name s3dbdump \
            --network host \
            -v s3dbdump-temp:/tmp \
            -e AWS_ACCESS_KEY_ID='minio' \
            -e AWS_SECRET_ACCESS_KEY='minio123' \
            -e S3_ENDPOINT='http://127.0.0.1:9000' \
            -e S3_BUCKET='dbdumps' \
            -e DB_HOST='127.0.0.1' \
            -e DB_PORT='3306' \
            -e DB_USER='root' \
            -e DB_PASSWORD='testpass123' \
            -e DB_ALL_DATABASES='1' \
            -e DB_DUMP_PATH='/tmp' \
            -e DB_DUMP_FILE_KEEP_DAYS='7' \
            s3dbdump

      - name: Verifying backup files in MinIO
        run: |
          if $HOME/minio-binaries/mc ls myminio/dbdumps | grep -q ".sql.gz"; then
            echo "✅ Integration test passed: Found backup(s) in MinIO bucket"
            exit 0
          else
            echo "❌ Integration test failed: No backups found in MinIO bucket"
            exit 1
          fi
